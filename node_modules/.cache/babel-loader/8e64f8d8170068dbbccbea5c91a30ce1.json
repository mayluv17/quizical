{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Dev/React Class/quizical/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport Quiz from \"./components/Quiz\";\nimport React from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [quizObj, setQuizObj] = React.useState([]);\n\n  function extendAnswerObj(answer, isCorrect) {\n    return {\n      id: nanoid(),\n      text: answer,\n      selected: false,\n      isCorrect: isCorrect\n    };\n  }\n\n  function dataRestructor(data) {\n    //console.log(JSON.stringify(data));\n    const questionsObj = data.map(result => ({ ...result,\n      correct_answer: extendAnswerObj(result.correct_answer, true),\n      incorrect_answers: result.incorrect_answers.map(prevObj => extendAnswerObj(prevObj, false))\n    }));\n    return questionsObj;\n  }\n\n  React.useEffect(() => {\n    fetch(\"https://opentdb.com/api.php?amount=5\").then(res => res.json()).then(data => setQuizObj(dataRestructor(data.results)));\n  }, []); //const answers = [...item.incorrect_answers, item.correct_answer];\n  //console.log(JSON.stringify(item));\n  //console.log(JSON.stringify(quizObj));\n\n  const allQuize = quizObj.map(item => {\n    const answers = [...item.incorrect_answers, item.correct_answer];\n    console.log(answers);\n    const allAnswers = answers.sort(() => 0.5 - Math.random());\n    return /*#__PURE__*/_jsxDEV(Quiz, {\n      id: nanoid(),\n      question: item.question,\n      correct_answer: item.correct_answer.id,\n      incorrect_answers: item.incorrect_answers,\n      allAnswers: allAnswers\n    }, nanoid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }); //console.log(JSON.stringify(quizObj));\n  //document.getElementsByClassName(\"answer--selector\").\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [allQuize, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"newgame--action\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"You scored 3/5 correct answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn--check--answer\",\n        children: \"Check answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn--check--answer\",\n        children: \"Play again!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OCVAui3S6l2aBCkdB7PuYvI+Jfw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Quiz","React","nanoid","App","quizObj","setQuizObj","useState","extendAnswerObj","answer","isCorrect","id","text","selected","dataRestructor","data","questionsObj","map","result","correct_answer","incorrect_answers","prevObj","useEffect","fetch","then","res","json","results","allQuize","item","answers","console","log","allAnswers","sort","Math","random","question"],"sources":["/Users/mac/Documents/Dev/React Class/quizical/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport Quiz from \"./components/Quiz\";\nimport React from \"react\";\nimport { nanoid } from \"nanoid\";\n\nfunction App() {\n  const [quizObj, setQuizObj] = React.useState([]);\n\n  function extendAnswerObj(answer, isCorrect) {\n    return {\n      id: nanoid(),\n      text: answer,\n      selected: false,\n      isCorrect: isCorrect,\n    };\n  }\n\n  function dataRestructor(data) {\n    //console.log(JSON.stringify(data));\n    const questionsObj = data.map((result) => ({\n      ...result,\n      correct_answer: extendAnswerObj(result.correct_answer, true),\n      incorrect_answers: result.incorrect_answers.map((prevObj) =>\n        extendAnswerObj(prevObj, false)\n      ),\n    }));\n    return questionsObj;\n  }\n  React.useEffect(() => {\n    fetch(\"https://opentdb.com/api.php?amount=5\")\n      .then((res) => res.json())\n      .then((data) => setQuizObj(dataRestructor(data.results)));\n  }, []);\n  //const answers = [...item.incorrect_answers, item.correct_answer];\n  //console.log(JSON.stringify(item));\n  //console.log(JSON.stringify(quizObj));\n  const allQuize = quizObj.map((item) => {\n    const answers = [...item.incorrect_answers, item.correct_answer];\n    console.log(answers);\n    const allAnswers = answers.sort(() => 0.5 - Math.random());\n    return (\n      <Quiz\n        key={nanoid()}\n        id={nanoid()}\n        question={item.question}\n        correct_answer={item.correct_answer.id}\n        incorrect_answers={item.incorrect_answers}\n        allAnswers={allAnswers}\n      />\n    );\n  });\n\n  //console.log(JSON.stringify(quizObj));\n\n  //document.getElementsByClassName(\"answer--selector\").\n  return (\n    <div className=\"container\">\n      {/* {JSON.stringify(quizObj)} */}\n\n      {allQuize}\n      <div className=\"newgame--action\">\n        <h4>You scored 3/5 correct answers</h4>\n        <button className=\"btn--check--answer\">Check answer</button>\n        <button className=\"btn--check--answer\">Play again!</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAA9B;;EAEA,SAASC,eAAT,CAAyBC,MAAzB,EAAiCC,SAAjC,EAA4C;IAC1C,OAAO;MACLC,EAAE,EAAER,MAAM,EADL;MAELS,IAAI,EAAEH,MAFD;MAGLI,QAAQ,EAAE,KAHL;MAILH,SAAS,EAAEA;IAJN,CAAP;EAMD;;EAED,SAASI,cAAT,CAAwBC,IAAxB,EAA8B;IAC5B;IACA,MAAMC,YAAY,GAAGD,IAAI,CAACE,GAAL,CAAUC,MAAD,KAAa,EACzC,GAAGA,MADsC;MAEzCC,cAAc,EAAEX,eAAe,CAACU,MAAM,CAACC,cAAR,EAAwB,IAAxB,CAFU;MAGzCC,iBAAiB,EAAEF,MAAM,CAACE,iBAAP,CAAyBH,GAAzB,CAA8BI,OAAD,IAC9Cb,eAAe,CAACa,OAAD,EAAU,KAAV,CADE;IAHsB,CAAb,CAAT,CAArB;IAOA,OAAOL,YAAP;EACD;;EACDd,KAAK,CAACoB,SAAN,CAAgB,MAAM;IACpBC,KAAK,CAAC,sCAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAEST,IAAD,IAAUT,UAAU,CAACQ,cAAc,CAACC,IAAI,CAACY,OAAN,CAAf,CAF5B;EAGD,CAJD,EAIG,EAJH,EAvBa,CA4Bb;EACA;EACA;;EACA,MAAMC,QAAQ,GAAGvB,OAAO,CAACY,GAAR,CAAaY,IAAD,IAAU;IACrC,MAAMC,OAAO,GAAG,CAAC,GAAGD,IAAI,CAACT,iBAAT,EAA4BS,IAAI,CAACV,cAAjC,CAAhB;IACAY,OAAO,CAACC,GAAR,CAAYF,OAAZ;IACA,MAAMG,UAAU,GAAGH,OAAO,CAACI,IAAR,CAAa,MAAM,MAAMC,IAAI,CAACC,MAAL,EAAzB,CAAnB;IACA,oBACE,QAAC,IAAD;MAEE,EAAE,EAAEjC,MAAM,EAFZ;MAGE,QAAQ,EAAE0B,IAAI,CAACQ,QAHjB;MAIE,cAAc,EAAER,IAAI,CAACV,cAAL,CAAoBR,EAJtC;MAKE,iBAAiB,EAAEkB,IAAI,CAACT,iBAL1B;MAME,UAAU,EAAEa;IANd,GACO9B,MAAM,EADb;MAAA;MAAA;MAAA;IAAA,QADF;EAUD,CAdgB,CAAjB,CA/Ba,CA+Cb;EAEA;;EACA,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,WAGGyB,QAHH,eAIE;MAAK,SAAS,EAAC,iBAAf;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAQ,SAAS,EAAC,oBAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAQ,SAAS,EAAC,oBAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;;GA9DQxB,G;;KAAAA,G;AAgET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}