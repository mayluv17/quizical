{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Dev/React Class/quizical/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport Quiz from \"./components/Quiz\";\nimport React from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [quizObj, setQuizObj] = React.useState([]);\n  const [gameCompleted, setgameCompleted] = React.useState(false);\n  const [score, setScore] = React.useState(0);\n\n  function extendAnswerObj(answer, isCorrect) {\n    return {\n      id: nanoid(),\n      text: answer,\n      selected: false,\n      isCorrect: isCorrect\n    };\n  }\n\n  function dataRestructor(data) {\n    const questionsObj = data.map(result => {\n      const cans = extendAnswerObj(result.correct_answer, true);\n      const ians = result.incorrect_answers.map(prevObj => extendAnswerObj(prevObj, false));\n      return { ...result,\n        qid: nanoid(),\n        correct_answer: cans,\n        incorrect_answers: ians,\n        //combined and randomise both corect and incorrect answers\n        answers: [cans, ...ians].sort(() => 0.5 - Math.random())\n      };\n    });\n    return questionsObj;\n  }\n\n  React.useEffect(() => {\n    fetch(\"https://opentdb.com/api.php?amount=3&category=18&difficulty=easy\").then(res => res.json()).then(data => setQuizObj(dataRestructor(data.results)));\n  }, []); //update the setQuizObj state when an answer is selected\n\n  function answerSelector(questionid, answerid) {\n    setQuizObj(prevData => prevData.map(eachQuestion => {\n      if (eachQuestion.qid === questionid) {\n        //check the question answered\n        return { ...eachQuestion,\n          answers: eachQuestion.answers.map(answer => {\n            //match update the seleted answer status\n            return answer.id === answerid ? { ...answer,\n              selected: true\n            } : //return other answer and set their staus to not selected\n            { ...answer,\n              selected: false\n            };\n          })\n        };\n      } else {\n        //console.log(questionid);\n        return { ...eachQuestion\n        };\n      }\n    }));\n  } //console.log(eachQuestion);\n\n\n  const allQuize = quizObj.map(item => {\n    return /*#__PURE__*/_jsxDEV(Quiz, {\n      id: item.qid,\n      question: item.question,\n      correct_answer: item.correct_answer.id,\n      incorrect_answers: item.incorrect_answers,\n      allAnswers: item.answers,\n      handleAnswerSelector: answerSelector\n    }, nanoid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  });\n\n  function checkanswer() {\n    setgameCompleted(true);\n    return quizObj.map(data => {\n      const correctAnswerCount = data.answers.filter(answer => answer.selected && answer.isCorrect);\n      console.log(correctAnswerCount);\n    });\n    setScore(correctAnswerCount.length);\n  } // console.log(JSON.stringify(quizObj));\n  //document.getElementsByClassName(\"answer--selector\").\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [allQuize, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"newgame--action\",\n      children: [gameCompleted && /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"You scored \", score, \"/\", quizObj.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn--check--answer\",\n        onClick: checkanswer,\n        children: \"Check answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn--check--answer\",\n        children: \"Play again!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"aLi7kMtX9BCiQRn3VU9KDNfbja0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Quiz","React","nanoid","App","quizObj","setQuizObj","useState","gameCompleted","setgameCompleted","score","setScore","extendAnswerObj","answer","isCorrect","id","text","selected","dataRestructor","data","questionsObj","map","result","cans","correct_answer","ians","incorrect_answers","prevObj","qid","answers","sort","Math","random","useEffect","fetch","then","res","json","results","answerSelector","questionid","answerid","prevData","eachQuestion","allQuize","item","question","checkanswer","correctAnswerCount","filter","console","log","length"],"sources":["/Users/mac/Documents/Dev/React Class/quizical/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport Quiz from \"./components/Quiz\";\nimport React from \"react\";\nimport { nanoid } from \"nanoid\";\n\nfunction App() {\n  const [quizObj, setQuizObj] = React.useState([]);\n  const [gameCompleted, setgameCompleted] = React.useState(false);\n  const [score, setScore] = React.useState(0);\n  function extendAnswerObj(answer, isCorrect) {\n    return {\n      id: nanoid(),\n      text: answer,\n      selected: false,\n      isCorrect: isCorrect,\n    };\n  }\n\n  function dataRestructor(data) {\n    const questionsObj = data.map((result) => {\n      const cans = extendAnswerObj(result.correct_answer, true);\n      const ians = result.incorrect_answers.map((prevObj) =>\n        extendAnswerObj(prevObj, false)\n      );\n      return {\n        ...result,\n        qid: nanoid(),\n        correct_answer: cans,\n        incorrect_answers: ians,\n        //combined and randomise both corect and incorrect answers\n        answers: [cans, ...ians].sort(() => 0.5 - Math.random()),\n      };\n    });\n    return questionsObj;\n  }\n  React.useEffect(() => {\n    fetch(\"https://opentdb.com/api.php?amount=3&category=18&difficulty=easy\")\n      .then((res) => res.json())\n      .then((data) => setQuizObj(dataRestructor(data.results)));\n  }, []);\n\n  //update the setQuizObj state when an answer is selected\n  function answerSelector(questionid, answerid) {\n    setQuizObj((prevData) =>\n      prevData.map((eachQuestion) => {\n        if (eachQuestion.qid === questionid) {\n          //check the question answered\n          return {\n            ...eachQuestion,\n            answers: eachQuestion.answers.map((answer) => {\n              //match update the seleted answer status\n              return answer.id === answerid\n                ? {\n                    ...answer,\n                    selected: true,\n                  }\n                : //return other answer and set their staus to not selected\n                  { ...answer, selected: false };\n            }),\n          };\n        } else {\n          //console.log(questionid);\n\n          return { ...eachQuestion };\n        }\n      })\n    );\n  }\n  //console.log(eachQuestion);\n  const allQuize = quizObj.map((item) => {\n    return (\n      <Quiz\n        key={nanoid()}\n        id={item.qid}\n        question={item.question}\n        correct_answer={item.correct_answer.id}\n        incorrect_answers={item.incorrect_answers}\n        allAnswers={item.answers}\n        handleAnswerSelector={answerSelector}\n      />\n    );\n  });\n\n  function checkanswer() {\n    setgameCompleted(true);\n    return quizObj.map((data) => {\n      const correctAnswerCount = data.answers.filter(\n        (answer) => answer.selected && answer.isCorrect\n      );\n\n      console.log(correctAnswerCount);\n    });\n    setScore(correctAnswerCount.length);\n  }\n  // console.log(JSON.stringify(quizObj));\n  //document.getElementsByClassName(\"answer--selector\").\n  return (\n    <div className=\"container\">\n      {/* {JSON.stringify(quizObj)} */}\n\n      {allQuize}\n      <div className=\"newgame--action\">\n        {gameCompleted && (\n          <h4>\n            You scored {score}/{quizObj.length}\n          </h4>\n        )}\n        <button className=\"btn--check--answer\" onClick={checkanswer}>\n          Check answer\n        </button>\n        <button className=\"btn--check--answer\">Play again!</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}